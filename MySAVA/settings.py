"""
Django settings for MySAVA project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from . info import *
from decouple import config
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# MySAVA/settings.py

from pathlib import Path
from decouple import config

BASE_DIR = Path(__file__).resolve().parent.parent

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')  
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD') 

# Print to verify
# print("EMAIL_HOST_USER:", EMAIL_HOST_USER)
# print("EMAIL_HOST_PASSWORD:", EMAIL_HOST_PASSWORD)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wdke-rd%j16gdotni4rj$mgdqy__%d4#sin44zug-z67e!(xg0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'authentication.User'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.microsoft',
    'authentication.apps.AuthenticationConfig',
    'chat.apps.ChatConfig',
    'social_django',
    'crispy_forms',
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.azuread.AzureADOAuth2',
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '850513000847-9ugl30kst2pgfg1s9t9ih0u073mmmirp.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'

SOCIAL_AUTH_AZUREAD_OAUTH2_KEY = '3df54f21-ffcc-4af6-bd6e-749736390b98'
SOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = 'IBj8Q~~~rPqy2FcgN5CDM2Z5EiDKFs2VAivwscWd'
SOCIAL_AUTH_AZUREAD_OAUTH2_TENANT_ID = '4dba495a-51ae-42e8-b049-7f0fe5e85d99'

LOGIN_URL = '/auth/signin'
LOGOUT_URL = '/auth/signout'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/auth/signin'

# Configure email verification
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_EMAIL_REQUIRED = True

# Redirects after login and logout
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Add any additional settings here
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'MySAVA.middleware.Custom404Middleware',
]

ROOT_URLCONF = 'MySAVA.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MySAVA.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'New_db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'authentication/static/')
STATIC_URL = 'S/'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"


LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'auth/signin'
LOGOUT_REDIRECT_URL = '/'
LOGOUT_URL = 'auth/signout'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Add your social account provider keys here
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '850513000847-9ugl30kst2pgfg1s9t9ih0u073mmmirp.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    },
    'microsoft': {
        'APP': {
            'client_id': '3df54f21-ffcc-4af6-bd6e-749736390b98',
            'secret': 'IBj8Q~~~rPqy2FcgN5CDM2Z5EiDKFs2VAivwscWd',
            'key': ''
        }
    },
}